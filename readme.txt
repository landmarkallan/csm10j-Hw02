I've never done this type and level of structural design before, so my brain isn't trained in this, getting overwhelmed and confused, unable to see all the connections and how they are all working together synchronously, unsure of what I got right vs wrong, and I only had time to work on this project for a few days, due to dealing with all my other homework, labs, tests that I'm working on every day, almost every hour that I'm not at school, sleeping, eating, getting ready and driving to and from school, and etc. My brain currently thinks much more in a "bottom to top", than a "top to down" mindset. I can understand when I read along a big design in the book as it lays it out step by step, but when I go to do it myself, I'm at a total loss. I tried to do what I could for this project, sighs. I got three tests (Python, C++, and Math) this week too, that I'm trying to study for as well, sighs.

--------------

1. The inheritance design doesn't include the interface design relationships, members, etc. I included a bit more properties in my first draft compared to what is mentioned on the homework descriptions for the inheritance design. The main structure and the relationships are similar.

2. The inheritance design has more direct structure-connections, wheras the interface design has more abstract structure-connections. For the way my brain works, the inheritance design is easier to follow and understand. The inheritance design has more members and methods, whereas the interface feels like it's overriding and defining many more methods than the inheritance design. It seems that the inerface design, being more abstract, allows more flexibility~freedom for whatever you want to do, whereas the inheritance is more constrained. The inheritance seems to have more "overhead" (more members, methods, connections, and etc structure), but seems to be easier to understand and follow (at least for the way my brain currently thinks).

4. Since I was unable to make sense of the project, of the design structure needed, I'll be  studying and practicing it (during the month I got between symesters), until I hopefully start to understand this type and level of structure design involving classes-objects, ecapsulation, inheritance, and polymorphism. I'm taking programming, as this is the carreer I want, and so I got to learn how to do this basic type and level of structural design of making projects to continue in programming for working towards eventually a carreer job.
